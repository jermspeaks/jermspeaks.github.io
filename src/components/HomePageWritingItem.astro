---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "./FormattedDate.astro";
import ProseArticle from "./ProseArticle.astro";

export interface Props {
  item: CollectionEntry<"writing">;
}

const { item } = Astro.props;
const { data, slug } = item;
const { description, pubDate, tags, title } = data;
const { Content } = await item.render();
---

<div class="prose dark:prose-invert !max-w-none prose-p:m-0">
  <a
    class="my-4 bold hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
    href={`/blog/${slug}/`}
  >
    {title}
  </a>
  <div class="text-sm italic mb-2">
    Posted <FormattedDate
      class="col-span-8 md:col-span-3 lg:col-span-2 italic text-slate-600 dark:text-slate-300"
      date={pubDate}
      options={{ hour: "numeric", minute: "numeric" }}
    />
  </div>
  <!-- <p class="text-slate-800 dark:text-slate-300">
    <i>{description}</i>
  </p> -->
</div>
<ProseArticle
  class="lg:prose !max-w-none prose-p:m-0 line-clamp-8 md:line-clamp-10"
>
  <Content />
</ProseArticle>
<div class="prose dark:prose-invert flex gap-4">
  <div>
    <a
      class="my-4 bold text-yellow-800 dark:text-yellow-500 hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
      href={`/blog/${slug}/`}
    >
      Read More
    </a>
    <!-- <span
      >Filed: ‚úçüèº <a
        class="hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
        href="/blog">Writing</a
      ></span
    > -->
  </div>
  <div class="flex gap-2">
    {
      Array.isArray(tags) &&
        tags.map((tag: string, index: number) => (
          <a
            class="text-slate-600 dark:text-slate-400 italic font-light hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
            href={`/blog/tag/${tag}`}
          >
            {tag}
          </a>
        ))
    }
  </div>
</div>
