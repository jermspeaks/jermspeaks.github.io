---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "./FormattedDate.astro";
import ProseArticle from "./ProseArticle.astro";

export interface Props {
  item: CollectionEntry<"stream">;
}

const { item } = Astro.props;
const { data, slug } = item;
const { title, tags } = data;
const { Content } = await item.render();
---

<div class="prose dark:prose-invert !max-w-none">
  <a
    class="hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
    href={`/curation/stream/link/${slug}`}>{title}</a
  >
  <div class="text-sm italic mb-2">
    Posted <FormattedDate
      date={item.data.pubDate}
      options={{ hour: "numeric", minute: "numeric" }}
    />
  </div>
</div>
<ProseArticle>
  <Content />
</ProseArticle>
<div class="prose dark:prose-invert">
  <!-- <div class="col-span-8 md:col-span-4 lg:col-span-2">
    <span
      >Filed: ðŸš° <a
        class="hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
        href="/curation/stream">Stream</a
      ></span
    >
  </div> -->
  <div>
    ðŸ”–{
      Array.isArray(tags) &&
        tags.map((tag: string, index: number) =>
          // if last item, don't add a space
          index === tags.length - 1 ? (
            <>
              <a
                class="hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
                href={`/blog/tag/${tag}`}
              >
                {tag}
              </a>
            </>
          ) : (
            <>
              <a
                class="hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
                href={`/blog/tag/${tag}`}
              >
                {tag}
              </a>
              &nbsp;
            </>
          )
        )
    }
  </div>
</div>
