---
interface Link {
  href: string;
  text: string;
  exact?: boolean;
}
export interface Props {
  items: Link[];
}

const { items = [] } = Astro.props;
const { pathname } = Astro.url;
const isActive = (href: string, exact?: boolean): boolean => {
  let finalPathname = pathname;
  // if pathname ends with /, remove it
  if (pathname.endsWith("/")) {
    finalPathname = pathname.slice(0, -1);
  }

  if (exact) {
    return href === finalPathname;
  }
  return href === finalPathname || href === finalPathname.replace(/^(\/\w*)\/?.*/, "$1");
};
---

<ul class="flex flex-wrap md:flex-nowrap gap-4 list-none m-0 p-0 print:hidden">
  {
    items.map((item) => (
      <li>
        {isActive(item.href, item.exact) ? (
          <a
            class="text-gray-700  dark:text-white  border-blue-800 dark:border-blue-500 border-solid border-b-2"
            href={item.href}
          >
            <strong>{item.text}</strong>
          </a>
        ) : (
          <a
            class="text-gray-700 hover:text-gray-900 dark:text-white dark:hover:text-gray-400"
            href={item.href}
          >
            {item.text}
          </a>
        )}
      </li>
    ))
  }
</ul>
