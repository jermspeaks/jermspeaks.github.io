---
import { getCollection } from "astro:content";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import BaseBody from "../components/BaseBody.astro";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import ProjectListItem from "../components/ProjectListItem.astro";
import ProseArticle from "../components/ProseArticle.astro";
import FormattedDate from "../components/FormattedDate.astro";
import WritingListItem from "../components/WritingListItem.astro";

const MAX_ITEMS = 4;

const latestPosts = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, MAX_ITEMS);
const lastProjects = (await getCollection("project"))
  .sort((a, b) => b.data.createdDate.valueOf() - a.data.createdDate.valueOf())
  .slice(0, MAX_ITEMS);

const TOTAL_NUMBER_OF_CURATED_ITEMS = 6;
const bookLibrary = (await getCollection("book"))
  .sort((a, b) => b.data.dateConsumed.valueOf() - a.data.dateConsumed.valueOf())
  .map((item) => ({
    ...item,
    data: {
      ...item.data,
      type: "books",
    },
  }));
const filmLibrary = (await getCollection("filmLibrary"))
  .sort((a, b) => b.data.dateConsumed.valueOf() - a.data.dateConsumed.valueOf())
  .map((item) => ({
    ...item,
    data: {
      ...item.data,
      type: "films",
    },
  }));
// const posts = (await getCollection("blog")).filter((post) => !post.data.draft);
const lindyLibrary = (await getCollection("lindy"))
  .sort((a, b) => b.data.dateConsumed.valueOf() - a.data.dateConsumed.valueOf())
  .map((item) => ({
    ...item,
    data: {
      ...item.data,
      type: "lindy",
    },
  }));

// Combines all of the collections and finds the latest `TOTAL_NUMBER_OF_CURATED_ITEMS` items
const combination = [...bookLibrary, ...filmLibrary, ...lindyLibrary]
  .sort((a, b) => b.data.dateConsumed.valueOf() - a.data.dateConsumed.valueOf())
  .slice(0, TOTAL_NUMBER_OF_CURATED_ITEMS);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>

  <BaseBody>
    <Header title={SITE_TITLE} />
    <main class="dark:text-white">
      <h1 class="mt-12 mb-6 text-3xl md:text-6xl">
        <strong>Jeremy</strong> makes essays and mini projects about programming,
        data, and crafting.
      </h1>
      <h2 class="mb-2 text-2xl font-thin">
        Maker, Home Cook, Book and Film Nerd. Currently leading application
        development at <a
          class="text-orange-700 hover:text-purple-500 dark:text-orange-500"
          href="https://clearlabs.com/"
          target="_blank">Clear Labs</a
        >
      </h2>

      <hr class="mt-10 mb-10" />

      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <div>
          <ProseArticle class="mx-0 mb-8">
            <h3 class="text-3xl font-medium underline">
              <a href="/blog" class="hover:text-purple-500">‚úçüèΩ What I Wrote</a>
            </h3>
          </ProseArticle>
          <ul class="list-none sm:p-0 grid grid-cols-1 gap-4">
            {latestPosts.map((post) => <WritingListItem post={post} />)}
          </ul>
        </div>
        <div>
          <ProseArticle class="mx-0 mb-8">
            <h3 class="text-3xl font-medium underline">
              <a href="/project" class="hover:text-purple-500"
                >üö¢ What I Shipped</a
              >
            </h3>
          </ProseArticle>
          <ul class="list-none sm:p-0 grid grid-cols-1 lg:grid-cols-2 gap-4">
            {
              lastProjects.map((project) => (
                <ProjectListItem project={project} />
              ))
            }
          </ul>
        </div>
        <div class="col-span-1 md:col-span-2">
          <ProseArticle class="mx-0 mb-8">
            <h3 class="text-3xl font-medium underline ">
              <a href="/curation"
                >üé® What I Curated</a
              >
            </h3>
          </ProseArticle>
          <ul class="grid grid-cols-1 md:grid-cols-2 gap-8 list-none p-0">
            {
              combination.map((item) => (
                <li class="grid grid-cols-8 gap-2 mb-6 md:mb-0 rounded-sm box-border dark:text-white">
                  <div class="col-span-3 sm:col-span-2">
                    <a
                      class="visited:text-amber-600 hover:grayscale"
                      href={`/curation/${item.data.type}/${item.slug}`}
                    >
                      <img
                        src={item.data.heroImage}
                        class="aspect-auto w-full"
                        alt={item.data.heroImageAlt}
                      />
                    </a>
                  </div>
                  <div class="col-span-5 sm:col-span-6 md:py-0 md:px-0 md:mt-0">
                    <div class="font-bold mb-2">
                      <a
                        class="hover:underline hover:text-purple-500 visited:text-amber-600"
                        href={`/curation/${item.data.type}/${item.slug}`}
                      >
                        {item.data.title}
                      </a>
                    </div>
                    <div class="mb-2 border-b-2 border-gray-300 dark:border-gray-700 font-thin">
                      {item.data.type === "books" && (
                        <>Author:&nbsp;{item.data.bookAuthor}</>
                      )}
                      {item.data.type === "films" && (
                        <>Dir:&nbsp;{item.data.director}</>
                      )}
                      {!["books", "films"].includes(item.data.type) && (
                        <>{item.data.author}</>
                      )}
                    </div>
                    <FormattedDate
                      class="italic text-slate-600 dark:text-slate-300"
                      date={item.data.dateConsumed}
                    >
                      <span slot="prepend">First consumed:&nbsp;</span>
                    </FormattedDate>
                    <div class="mt-2 dark:text-slate-100">
                      {item.data.blurb}
                    </div>
                  </div>
                </li>
              ))
            }
          </ul>
        </div>
      </div>

      <hr class="mt-5 mb-5" />

      <ProseArticle>
        <h3>
          <a
            href="/curation/newsletter"
            class="hover:text-purple-500"
            >Newsletter Series</a
          >
        </h3>

        <p>
          üöß Will be back shortly. <a
            href="https://mailchi.mp/85e4c601669a/tinylettersunsetcurrent-221169"
            target="_blank"
            >TinyLetter is going to be out of service in Feb 2024</a
          >, so I'm looking for a new home for my newsletter. Stay tuned!
        </p>
        <p>
          In the meantime, continue to subscribe, and I will forward the mailing
          list to the new service.
        </p>
        <!-- <p>
          A weekly, longform essay that mainly focuses on lessons I've learned.
          I try to write something I find meaningful, whether it's exposing your
          ignorance, staying true to yourself or being resilient. In a world of
          tweet-sized advice and short comments on a non-sensical Facebook post,
          there's not enough time to process and distill what we're actually
          thinking. These letters are to slow down, lean in and really try to
          form more coherent thoughts than writing that instant gratification
          post on my choice of social networking site.
        </p> -->

        <form
          action="https://tinyletter.com/jeremywong"
          class="landing-newsletter-form"
          method="post"
          onsubmit="window.open('https://tinyletter.com/jeremywong', 'popupwindow', 'scrollbars=yes,width=800,height=600');return true"
          target="popupwindow"
        >
          <div>
            <!-- <label for="tlemail">
              If what you read resonates with you, please <strong
                >subscribe</strong
              >!
            </label> -->
          </div>
          <div class="flex flex-col md:flex-row gap-4">
            <div>
              <input
                type="text"
                name="email"
                id="tlemail"
                class="py-1 px-2 md:py-2 md:px-4"
                placeholder="email address"
              />
              <input type="hidden" value="1" name="embed" />
            </div>
            <div>
              <input class="sr-only" type="hidden" value="Subscribe" />
              <button
                class="bg-yellow-700 hover:bg-yellow-700 dark:bg-yellow-300 text-white dark:text-black font-bold py-2 px-4 rounded"
                type="submit">Subscribe</button
              >
            </div>
          </div>
          <p class="text-sm">
            <a href="https://tinyletter.com" target="_blank"
              >powered by TinyLetter</a
            >
          </p>
        </form>
      </ProseArticle>
    </main>

    <Footer />
  </BaseBody>
</html>
