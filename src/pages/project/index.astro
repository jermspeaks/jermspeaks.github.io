---
import { getCollection } from "astro:content";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import BaseBody from "../../components/BaseBody.astro";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";
import ProjectListItem from "../../components/ProjectListItem.astro";
import projectsImg from "../../images/projects.png";
import ProseArticle from "../../components/ProseArticle.astro";
import TitleHeading from "../../components/TitleHeading.astro";

type Props = {
  title?: string;
};

interface ItemData {
  draft?: boolean;
  pubDate: Date | string;
  title: string;
  updatedDate?: Date | string;
}

interface Item {
  data: ItemData;
}

const { title = "Playground" } = Astro.props;

const projects = (await getCollection("project")).sort((a: Item, b: Item) => {
  // If updated date exists, use that first, then use pubDate if not
  const aDate = a.data.updatedDate ? a.data.updatedDate : a.data.pubDate;
  const bDate = b.data.updatedDate ? b.data.updatedDate : b.data.pubDate;
  return new Date(bDate).valueOf() - new Date(aDate).valueOf();
});
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      description={SITE_DESCRIPTION}
      imageAlt="Projects cover"
      srcImage={projectsImg.src}
      title={title || SITE_TITLE}
    />
  </head>
  <BaseBody>
    <Header />
    <main class="mx-auto">
      <TitleHeading>Playground</TitleHeading>
      <ProseArticle class="mx-0 mb-8">
        <p>
          The playground is a place for personal projects, professional work,
          and toy projects that I have built. Not all projects are finished.
          Some are ideas to explore. Others are abandonware.
        </p>
      </ProseArticle>
      <section>
        <ul class="list-none p-0 grid grid-cols-1 gap-4">
          {projects.map((project) => <ProjectListItem project={project} />)}
        </ul>
      </section>
    </main>
    <Footer />
  </BaseBody>
</html>
