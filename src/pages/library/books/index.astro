---
import { getCollection } from "astro:content";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../../consts";
import FormattedDate from "../../../components/FormattedDate.astro";
import LibraryPage from "../../../layouts/LibraryPage.astro";

const library = (await getCollection("library")).sort(
  (a, b) => b.data.dateConsumed.valueOf() - a.data.dateConsumed.valueOf()
);
const posts = (await getCollection("blog")).filter((post) => !post.data.draft);
const libraryReviews = library.map((book) => {
  const postIndex = posts.findIndex(
    (post) => post.data.title === book.data.review
  );
  if (postIndex > -1) {
    return posts[postIndex];
  } else {
    return null;
  }
});
---

<LibraryPage>
  <section>
    <ul class="flex flex-wrap list-none mt-8 p-0 gap-4">
      {
        library.map((book, bookIndex) => (
          <li class="flex flex-shrink-0 flex-grow-0 flex-col flex-[200px] rounded-sm box-border dark:text-white">
            <a
              class="visited:text-purple-600"
              href={book.data.link}
              target="_blank"
            >
              <img src={book.data.heroImage} width="200" />
            </a>
            <div class="py-3 px-4 border-t-2 border-solid border-gray-100 mt-4">
              <div>{book.data.title}</div>
              <div>{book.data.author}</div>
              <FormattedDate
                class="italic text-slate-600 dark:text-slate-300"
                date={book.data.dateConsumed}
              />
              {libraryReviews[bookIndex] && (
                <div>
                  <a
                    class="visited:text-purple-600"
                    href={`/blog/${libraryReviews[bookIndex].slug}`}
                  >
                    Review
                  </a>
                </div>
              )}
            </div>
          </li>
        ))
      }
    </ul>
  </section>
</LibraryPage>
