---
import { getCollection } from "astro:content";
import CurationItem from "../../components/CurationItem.astro";
import CurationPage from "../../layouts/CurationPage.astro";
import PaginatedPosts from "../../components/PaginatedPosts.astro";
import Pagination from "../../components/Pagination.astro";
import ProseArticle from "../../components/ProseArticle.astro";

interface ItemData {
  draft?: boolean;
  pubDate: Date | string;
  title: string;
  updatedDate?: Date | string;
}

interface Item {
  data: ItemData;
}

const bookLibrary = await getCollection("book");
const antibookLibrary = await getCollection("antiLibrary");
const filmLibrary = await getCollection("filmLibrary");
const lindyLibrary = await getCollection("lindy");
const logs = await getCollection("log");
const creators = await getCollection("creator");
const inspiration = await getCollection("inspiration");

const TOTAL_NUMBER_OF_ITEMS = 16;

// Combines all of the collections and finds the latest `TOTAL_NUMBER_OF_ITEMS` items
const combination = [
  ...antibookLibrary,
  ...bookLibrary,
  ...creators,
  ...filmLibrary,
  ...inspiration,
  ...lindyLibrary,
  ...logs,
]
  .filter((item: Item) => !item.data.draft)
  .sort((a: Item, b: Item) => {
    // If updated date exists, use that first, then use pubDate if not
    const aDate = a.data.updatedDate ? a.data.updatedDate : a.data.pubDate;
    const bDate = b.data.updatedDate ? b.data.updatedDate : b.data.pubDate;
    return new Date(bDate).valueOf() - new Date(aDate).valueOf();
  })
  .slice(0, TOTAL_NUMBER_OF_ITEMS);

const curations = (await getCollection("curation")).sort((a, b) =>
  a.data.title.localeCompare(b.data.title)
);
---

<CurationPage>
  <ProseArticle class="mx-0">
    <p>
      This is the curated collection of eclectic items. I love collecting
      different kinds of mediums and media. The things that have resonated I'll
      shelve in my library.
    </p>
  </ProseArticle>
  <section class="grid grid-cols-8 gap-4 mt-8">
    <ul
      class="col-span-8 sm:col-span-4 md:col-span-3 flex flex-col gap-4 list-none p-0"
    >
      {
        curations.map(
          (curation) => !curation.data.draft && <CurationItem item={curation} />
        )
      }
    </ul>
    <div class="col-span-8 sm:col-span-4 md:col-span-5">
      <hr class="h-px my-8 bg-gray-200 border-0 dark:bg-gray-700 sm:hidden" />
      <ul class="flex flex-col gap-8 list-none p-0">
        <PaginatedPosts posts={combination} />
      </ul>
      <Pagination next="/curation/page/2" currentPage={1} />
    </div>
  </section>
</CurationPage>
