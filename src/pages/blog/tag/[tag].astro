---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import WritingLayout from "../../../layouts/Writing.astro";
import WritingListItem from "../../../components/WritingListItem.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  // Get unique tags
  const tags = new Set<string>();
  posts.forEach((post) => {
    if (Array.isArray(post.data.tags)) {
      post.data.tags.forEach((tag: string) => tags.add(tag));
    }
  });

  return Array.from(tags).map((tag) => {
    // Get posts from the given tag
    const postsFilteredByTag = posts.filter((post) => {
      if (Array.isArray(post.data.tags)) {
        return post.data.tags.includes(tag);
      }
      return false;
    });
    return {
      params: { tag, path: `tag` },
      props: { posts: postsFilteredByTag, tag },
    };
  });
}

type Props = {
  posts: CollectionEntry<"blog">[];
  tag: string;
};

const { posts, tag } = Astro.props;

const orderedPosts = posts
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<WritingLayout currentTag={tag}>
  <!-- <h3 class="mt-6 text-green-700 dark:text-green-300">Tag: {tag}</h3> -->
  <ul class="list-none p-0">
    {orderedPosts.map((post) => <WritingListItem post={post} />)}
  </ul>
</WritingLayout>
