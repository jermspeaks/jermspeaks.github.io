---
import { getCollection } from "astro:content";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import BaseBody from "../../components/BaseBody.astro";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";
import HomePageSide from "../../components/HomePageSide.astro";
import PaginatedPosts from "../../components/PaginatedPosts.astro";
import Pagination from "$lib/components/Pagination.astro";
import type { GetStaticPaths } from "astro";

// Generate pages from our array of streams, with 10 to a page
export const getStaticPaths = (async ({ paginate }) => {
  const latestPosts = (await getCollection("writing")).filter(
    (post) => !post.data.draft
  );
  const lastStream = (await getCollection("stream")).filter(
    (item) => !item.data.draft
  );
  const antibookLibrary = await getCollection("antiLibrary");
  const bookLibrary = await getCollection("book");
  const creators = await getCollection("creator");
  const filmLibrary = await getCollection("filmLibrary");
  const lastProjects = await getCollection("project");
  const lindyLibrary = await getCollection("lindy");
  const nowItems = await getCollection("now");

  const combination = [
    ...latestPosts,
    ...lastStream,
    ...lastProjects,
    ...bookLibrary,
    ...filmLibrary,
    ...lindyLibrary,
    ...antibookLibrary,
    ...creators,
    ...nowItems,
  ].sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

  return paginate(combination, { pageSize: 16 });
}) satisfies GetStaticPaths;

// All paginated data is passed on the "page" prop
const { page } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>

  <BaseBody>
    <Header />
    <main class="max-w-xl md:max-w-2xl mx-auto dark:text-white">
      <div class="mt-4 mb-6 flex flex-col sm:flex-row gap-4 justify-between">
        <div>
          <div class="text-xl md:text-2xl">
            Page {page.currentPage}
          </div>
        </div>
      </div>

      <!-- <hr class="mt-10 mb-10" /> -->
      <!-- <div class="grid grid-cols-1 md:grid-cols-8 gap-8">
        <div class="col-span-1 md:col-span-6"> -->
          <PaginatedPosts posts={page.data} />
          <Pagination
            previous={page.currentPage === 2 ? "/" : page.url.prev}
            next={page.currentPage === page.lastPage ? "#pagination-older" : page.url.next}
            currentPage={page.currentPage}
            lastPage={page.lastPage}
          />
        <!-- </div> -->
        <!-- <div class="col-span-1 md:block md:col-span-2">
          <HomePageSide />
        </div> -->
      <!-- </div> -->
    </main>
    <Footer />
  </BaseBody>
</html>
