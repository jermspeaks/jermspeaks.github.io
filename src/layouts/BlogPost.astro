---
import { Image } from "astro:assets";
import BaseBody from "../components/BaseBody.astro";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";
import ProseArticle from "../components/ProseArticle.astro";
import type { CollectionEntry } from "astro:content";

type Props = CollectionEntry<"writing">["data"];

const {
  coverImage,
  description,
  heroImage,
  heroImageAlt,
  minutesRead,
  pubDate,
  tags,
  title,
  updatedDate,
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead
      description={description}
      image={heroImage}
      imageAlt={heroImageAlt}
      srcImage={coverImage?.src}
      title={title}
    />
  </head>

  <BaseBody>
    <Header />
    <main>
      <ProseArticle>
        {
          coverImage && (
            <figure>
              <Image
                width={720}
                height={360}
                src={coverImage}
                alt={heroImageAlt}
              />
              {heroImageAlt && (
                <figcaption class="text-sm italic">{heroImageAlt}</figcaption>
              )}
            </figure>
          )
        }
        {
          heroImage && (
            <figure>
              <img
                width={720}
                height={360}
                src={heroImage}
                alt={heroImageAlt}
              />
              {heroImageAlt && (
                <figcaption class="text-sm italic">{heroImageAlt}</figcaption>
              )}
            </figure>
          )
        }
        <div class="flex gap-4">
          <p><FormattedDate date={pubDate} /></p>
          <p>&#x2022;</p>
          <p>{minutesRead}</p>
          <p>&#x2022;</p>
          <p>
            {
              tags.map((tag: string, index) =>
                // if last item, don't add a space
                index === tags.length - 1 ? (
                  <>
                    <a
                      class="hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
                      href={`/blog/tag/${tag}`}
                    >
                      ðŸ”–{tag}
                    </a>
                  </>
                ) : (
                  <>
                    <a
                      class="hover:underline hover:text-purple-500 visited:text-amber-600 dark:visited:text-purple-300"
                      href={`/blog/tag/${tag}`}
                    >
                      ðŸ”–{tag}
                    </a>
                    &nbsp;
                  </>
                )
              )
            }
          </p>
        </div>
        {
          updatedDate && (
            <div class="italic dark:text-slate-300">
              Last updated on <FormattedDate date={updatedDate} />
            </div>
          )
        }
        <slot />
      </ProseArticle>
    </main>
    <Footer />
  </BaseBody>
</html>
